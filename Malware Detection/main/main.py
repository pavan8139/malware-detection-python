from tkinter import *
from tkinter.ttk import *
from tkinter import filedialog
import cv2
from PIL import Image
from PIL import ImageTk
import numpy as np
import pandas

import psutil
import platform
from datetime import datetime


def get_size(bytes, suffix="B"):
    factor = 1024
    for unit in ["", "K", "M", "G", "T", "P"]:
        if bytes < factor:
            return f"{bytes:.2f}{unit}{suffix}"
        bytes /= factor

def Input_Image():
    global resized_image
    root.filename =  filedialog.askopenfilename(parent=root,initialdir = "/",title = "choose your file",filetypes = (("jpg files","*.jpeg"),("all files","*.*")))
    




root = Tk()
root.title('ML TECHNIQUES TO DETECT MALICIOUSNESS OF PORTABLE EXECUTABLE FILES')
root.geometry('1366x768')
style=Style()
style.configure('W.TButton',font=('Arial',12),foreground='blue',background='lightgray')
menubar=Menu(root)
train=Menu(menubar,tearoff=0)
menubar.add_cascade(label='Train',menu=train)
Help=Menu(menubar,tearoff=0)
menubar.add_cascade(label='Help',menu=Help)
root.config(menu=menubar)


Label(root,text='ML TECHNIQUES TO DETECT MALICIOUSNESS OF PORTABLE EXECUTABLE FILES',foreground="Blue",font=('Arial',22)).pack(side=TOP,pady=20)

cr1 = Canvas(root, width=1200, height=230)
cr1.place(x=70,y=80) 
cr1.create_rectangle(10,10,1200,230,outline='black', fill='lightgray',width=1)

bl=Button(root,text="SCAN",style='W.TButton',command=None)
bl.place(height=170,width=270,x=110,y=120)

b2=Button(root,text="TRAIN",style='W.TButton',command=None)
b2.place(height=170,width=270,x=530,y=120)

b3=Button(root,text="RESULT PLOT",style='W.TButton',command=None)
b3.place(height=170,width=270,x=970,y=120)

cr2 = Canvas(root, width=1200,height=350) 
cr2.place(x=70,y=320) 
cr2.create_rectangle(10,10,1200,350,outline='black',fill='lightgray',width=1)



psx=120
psp=120
psb=110
psx1=120
psx2=120
psx3=120
partitions = psutil.disk_partitions()
for partition in partitions:
    print(f"=== Device: {partition.device} ===")
    
    Button(root,text=" ",style='W.TButton',command=None).place(height=150,width=170,x=psb,y=370)
    Label(root,text=f"{partition.device}",foreground="Blue",background="lightgray",font=('Arial',15)).place(x=psx,y=380)
    progress = Progressbar(root, orient = HORIZONTAL,length = 150, mode = 'determinate')
    progress.place(x=psp, y=420)
    try:
        partition_usage = psutil.disk_usage(partition.mountpoint)
    except PermissionError:
        continue
    Label(root,text=f"Total Size: {get_size(partition_usage.total)}",foreground="Blue",background="gray",font=('Arial',10)).place(x=psx,y=440)
    Label(root,text=f"Used: {get_size(partition_usage.used)}",foreground="Blue",background="lightgray",font=('Arial',10)).place(x=psx,y=460)
    Label(root,text=f"Free: {get_size(partition_usage.free)}",foreground="Blue",background="lightgray",font=('Arial',10)).place(x=psx,y=480)
    Label(root,text=f"Percentage: {partition_usage.percent}%",foreground="Blue",background="lightgray",font=('Arial',10)).place(x=psx,y=500)
    progress['value'] = partition_usage.percent
    root.update_idletasks()

    psx=psx+250
    psp=psp+250
    psb=psb+250
    psx1=psx1+120
    psx2=psx2+120
    psx3=psx3+120


disk_io = psutil.disk_io_counters()
for disk_i in disk_io:
    print(f"Total read: {get_size(disk_i.read_bytes)}")
    #print(f"Total write: {get_size(disk_i.write_bytes)}")

mainloop()


